m4_dnl   nuTesting.p2: Fancy macro syntax for interfacing with Nu.Testing
m4_dnl   (C) 2015 M E Leypold
m4_dnl  
m4_dnl   This program is free software: you can redistribute it and/or modify
m4_dnl   it under the terms of the GNU General Public License as published by
m4_dnl   the Free Software Foundation, either version 3 of the License, or
m4_dnl   (at your option) any later version.
m4_dnl  
m4_dnl   This program is distributed in the hope that it will be useful,
m4_dnl   but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl   GNU General Public License for more details.
m4_dnl  
m4_dnl   You should have received a copy of the GNU General Public License
m4_dnl   along with this program.  If not, see <http://www.gnu.org/licenses/>.
m4_dnl
Nu.Testing
m4_divert(-1)

m4_define({{BEGIN_FEATURE}},{{let test_suite : Nu.Testing.suite = Nu.Testing.begin_suite STRINGIFY(m4_patsubst(m4___file__,{{\([.][^.]+\)+[.]ml$}},{{}}))}})
m4_define(EXPECT,{{( expect ~origin:({{"}}m4___file__{{"}},m4___line__) ~source:STRINGIFY($1) (fun () -> Nu.Testing.With.($1))) }})
m4_define(WONT_RAISE,{{( expect_wont_raise ~origin:({{"}}m4___file__{{"}},m4___line__) ~source:STRINGIFY($1) (fun () -> ($1))) }})
m4_define(EXPECT_WONT_RAISE,{{( expect_no_excn ~origin:({{"}}m4___file__{{"}},m4___line__) ~source:STRINGIFY($1) (fun () -> ($1))) }})
m4_define({{TEST}},{{ $1 = let ( ***** ) f v = f v in Nu.Testing.new_test test_suite (STRINGIFY($1)) ***** fun () -> () }})

m4_divert(4)m4_dnl
let _ = Nu.Testing.finish_suite test_suite
m4_divert(2)m4_dnl
